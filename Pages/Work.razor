@using System;
@using System.Collections;
@page "/work"
@inject WorkData WorkData;

<PageTitle>Messenger Masonry | Work</PageTitle>


<div class="heroWrapper">
    <div class="heroContainer topHero">
        <div class="heroContent">
            <h1 class="blackFont">OUR <span class="whiteFont">WORK</span> SPEAKS FOR ITSELF</h1>
        </div>
    </div>
</div>
<div class="workGallery">
    @for(int i = 0; i < WorkData.imgUrls.Count(); i++) {
        int idx = i;
        <div @onclick="() => SetLightBox(idx)" class=@($"workImageWrapper disableSelect { getState(i) } ")>
            <img class="workImage disableSelect" src=@($"css/Assets/WorkImages/{ WorkData.imgUrls[i] }.jpg") alt=@($"{ WorkData.imgUrls[i] }") />
        </div>
    }
</div>

<div @onclick="() => ClearContent()" class=@($"lightBox { lightBoxClassName }")>
    <div class="contentContainer">
        @if(lightBoxSet) {
            <img class="lightBoxImg" src=@($"css/Assets/WorkImages/{ @galleryImage }.jpg") alt=@($"{ @galleryImage }") />
            <span class="lightBoxText disableSelect">
                click to close
            </span>
        }
    </div>
</div>


@code {

    private ArrayList galleryContent = new ArrayList();
    int selectedIdx = -1;
    bool switchingGallery = false;
    string galleryImage = "";
    bool firstLoad = true;
    bool lightBoxSet = false;
    string imgBoxClassName = "";
    string textBoxClassName = "";
    string lightBoxClassName = "hide";

    private string getState(int idx) {
        if(idx == selectedIdx) {
            return "active";
        }else {
            return "";
        }
    }// getState

    public void ClearContent() {
        lightBoxSet = false;
        lightBoxSetClassName();
        StateHasChanged();
    }// ClearContent

    private async void lightBoxSetClassName() {
        if(lightBoxSet) {
            lightBoxClassName = "show fadeIn";
        }else {
            lightBoxClassName = "show fadeOut";
            StateHasChanged();
            await Task.Delay(300);
            lightBoxClassName = "hide";
            StateHasChanged();
        }
    }// lightBoxSetClassName

    public async void SetLightBox(int idx) {
        galleryImage = WorkData.imgUrls[idx];
        lightBoxSet = true;
        lightBoxSetClassName();
        await Task.Delay(1);
    }// SetLightBox

    protected override async Task OnInitializedAsync() {
        StateHasChanged();
        firstLoad = false;
    }// OnInitializedAsync
}
